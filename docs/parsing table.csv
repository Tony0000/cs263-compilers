;$;minus;plus;not;const_real;const_int;mulop;addop;relop;logicop;comma;rbrkt;lbrkt;id;dp;rparen;const_string;lparen;writeln;write;read;step;else;do;to;assignop;for;while;then;if;semicolon;end;begin;procedure;declr;function;char;boolean;string;real;integer;of;through;array;const_boolean;const_char;type;const;var;uses;dot;program;
PROGRAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PROGRAM -> program id semicolon LIBRARIES DECLRS SUB_PGM_DECLRS COMPOUND_STMT dot;
LIBRARIES;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;LIBRARIES -> epsilon;LIBRARIES -> epsilon;;LIBRARIES -> epsilon;;;;;;;;;;;LIBRARIES-> epsilon;LIBRARIES -> epsilon;LIBRARIES-> epsilon;LIBRARIES-> uses ID_LIST semicolon;;;
ID_LIST;;;;;;;;;;;;;;ID_LIST -> id ID_LISTR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
ID_LISTR;;;;;;;;;;;ID_LISTR -> comma id ID_LISTR;;;;ID_LISTR -> epsilon;ID_LISTR -> epsilon;;;;;;;;;;;;;;;ID_LISTR -> epsilon;;;;;;;;;;;;;;;;;;;;;;
DECLRS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;DECLRS -> epsilon;DECLRS -> epsilon;;DECLRS -> epsilon;;;;;;;;;;;DECLRS -> type TYPER DECLRSR;DECLRS -> const CONST_DECLRDECLRSR;DECLRS -> var VAR_DECLR DECLRSR;;;;
VAR_DECLR;;;;;;;;;;;;;;VAR_DECLR -> ID_LIST dp TYPE semicolon VAR_DECLR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
CONST_DECLR;;;;;;;;;;;;;;CONST_DECLR -> id assignop CONST_VALUES semicolon CONST_DECLR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
CONST_VALUES;;;;;CONST_VALUES -> const_real;CONST_VALUES -> const_int;;;;;;;;;;;CONST_VALUES -> const_string;;;;;;;;;;;;;;;;;;;;;;;;;;;;CONST_VALUES-> const_boolean;CONST_VALUES-> const_char;;;;;;;
TYPE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;TYPE -> STD_TYPE;TYPE -> STD_TYPE;TYPE -> STD_TYPE;TYPE -> STD_TYPE;TYPE -> STD_TYPE;;;TYPE -> arraylbrktCTRL_VALUEthroughCTRL_VALUErbrkt ofSTD_TYPE;;;;;;;;;
STD_TYPE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;STD_TYPE-> char;STD_TYPE-> boolean;STD_TYPE-> string;STD_TYPE-> real;STD_TYPE-> integer;;;;;;;;;;;;
TYPER;;;;;;;;;;;;;;TYPER -> id assignopTYPE semicolon TYPER;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
SUB_PGM_DECLRS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SUB_PGM_DECLRS-> epsilon;SUB_PGM_DECLRS -> SUB_PGM_DECLRsemicolonSUB_PGM_DECLRS;;SUB_PGM_DECLRS -> SUB_PGM_DECLRsemicolonSUB_PGM_DECLRS;;;;;;;;;;;;;;;;;
SUB_PGM_DECLR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SUB_PGM_DECLR -> SUB_PGM_HEADDECLRSCOMPOUND_STMT;;SUB_PGM_DECLR -> SUB_PGM_HEADDECLRSCOMPOUND_STMT;;;;;;;;;;;;;;;;;
SUB_PGM_HEAD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SUB_PGM_HEAD -> procedureSUB_PGM_HEAD_PARAMsemicolon;;SUB_PGM_HEAD -> functionSUB_PGM_HEAD_PARAMdeclr STD_TYPE semicolon;;;;;;;;;;;;;;;;;
SUB_PGM_HEAD_PARAM;;;;;;;;;;;;;;SUB_PGM_HEAD_PARAM-> id lparen PARAM_LIST rparen;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
PARAM_LIST;;;;;;;;;;;;;;PARAM_LIST -> ID_LIST dp TYPE PARAM_LISTR;;PARAM_LIST -> epsilon;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
PARAM_LISTR;;;;;;;;;;;;;;;;PARAM_LISTR -> epsilon;;;;;;;;;;;;;;;PARAM_LISTR -> semicolonID_LIST dp TYPEPARAM_LIST;;;;;;;;;;;;;;;;;;;;;;
COMPOUND_STMT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;COMPOUND_STMT-> begin OPT_STMTend;;;;;;;;;;;;;;;;;;;;
OPT_STMT;;;;;;;;;;;;;;OPT_STMT -> STMT_LIST;;;;;OPT_STMT -> STMT_LIST;OPT_STMT -> STMT_LIST;OPT_STMT -> STMT_LIST;;;;;;OPT_STMT -> STMT_LIST;OPT_STMT -> STMT_LIST;;OPT_STMT -> STMT_LIST;;OPT_STMT -> epsilon;OPT_STMT -> STMT_LIST;;;;;;;;;;;;;;;;;;;;
STMT_LIST;;;;;;;;;;;;;;STMT_LIST -> STMT STMT_LISTR;;;;;STMT_LIST -> STMT STMT_LISTR;STMT_LIST -> STMT STMT_LISTR;STMT_LIST -> STMT STMT_LISTR;;;;;;STMT_LIST -> STMT STMT_LISTR;STMT_LIST -> STMT STMT_LISTR;;STMT_LIST -> STMT STMT_LISTR;;;STMT_LIST -> STMT STMT_LISTR;;;;;;;;;;;;;;;;;;;;
STMT_LISTR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;STMT_LISTR -> semicolon STMT STMT_LISTR;STMT_LISTR -> epsilon;;;;;;;;;;;;;;;;;;;;;
STMT;;;;;;;;;;;;;;STMT -> VARIABLE assignop EXPRESSION;;;;;STMT -> PROCEDURE_STMT;STMT -> PROCEDURE_STMT;STMT -> PROCEDURE_STMT;;;;;;STMT -> for id assignop CTRL_VALUE to CTRL_VALUE OPT_FOR_STEP do COMPOUND_STMT;STMT -> while EXPRESSION_LIST do STMT;;STMT -> if EXPRESSION_LIST then STMT OPT_CONDITIONAL_STMT;;;STMT -> COMPOUND_STMT;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;STMT -> PROCEDURE_STMT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
CTRL_VALUE;;;;;;CTRL_VALUE -> const_int;;;;;;;;CTRL_VALUE -> id;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
OPT_CONDITIONAL_STMT;;;;;;;;;;;;;;;;;;;;;;;OPT_CONDITIONAL_STMT-> else STMT;;;;;;;;OPT_CONDITIONAL_STMT-> epsilon;OPT_CONDITIONAL_STMT-> epsilon;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;OPT_CONDITIONAL_STMT-> epsilon;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
OPT_FOR_STEP;;;;;;;;;;;;;;;;;;;;;;OPT_FOR_STEP-> step const_int;;OPT_FOR_STEP -> epsilon;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
PROCEDURE_STMT;;;;;;;;;;;;;;PROCEDURE_STMT -> id lparen ID_LIST rparen;;;;;PROCEDURE_STMT-> writeln lparen WRITE_PARAM_LIST;PROCEDURE_STMT-> write lparen WRITE_PARAM_LIST;PROCEDURE_STMT-> read lparen ID_LIST rparen;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
WRITE_PARAM_LIST;;;;;;;;;;;;;;WRITE_PARAM_LIST -> VARIABLE FIELD_WIDTH WRITE_PARAM_LISTR;;;WRITE_PARAM_LIST-> const_string FIELD_WIDTH WRITE_PARAM_LISTR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
WRITE_PARAM_LISTR;;;;;;;;;;;WRITE_PARAM_LISTR-> comma WRITE_PARAM_LIST;;;;;WRITE_PARAM_LISTR-> rparen;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FIELD_WIDTH;;;;;;;;;;;FIELD_WIDTH -> epsilon;;;;FIELD_WIDTH-> dp const_intPRECISION;FIELD_WIDTH -> epsilon;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
PRECISION;;;;;;;;;;;PRECISION -> epsilon;;;;PRECISION -> dp const_int;PRECISION -> epsilon;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE;;;;;;;;;;;;;;VARIABLE -> id INDEX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
INDEX;;;;;;;INDEX-> epsilon;INDEX -> epsilon;INDEX -> epsilon;INDEX -> epsilon;INDEX -> epsilon;INDEX -> epsilon;INDEX -> lbrkt SIMPLE_EXPRESSION rbrkt;;INDEX -> epsilon;INDEX -> epsilon;;;;;;;INDEX -> epsilon;INDEX -> epsilon;;INDEX-> epsilon;;;INDEX -> epsilon;;INDEX -> epsilon;INDEX -> epsilon;;;;;;;;;;;;;;;;;;;;;
VARIABLE_LIST;;;;;;;;;;;;;;VARIABLE_LIST -> VARIABLEVARIABLE_LISTR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
VARIABLE_LISTR;;;;;;;;;;;VARIABLE_LISTR -> commaVARIABLE_LIST;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
EXPRESSION_LIST;;EXPRESSION_LIST -> EXPRESSION EXPRESSION_LISTR;EXPRESSION_LIST -> EXPRESSION EXPRESSION_LISTR;EXPRESSION_LIST -> EXPRESSION EXPRESSION_LISTR;EXPRESSION_LIST -> EXPRESSION EXPRESSION_LISTR;EXPRESSION_LIST -> EXPRESSION EXPRESSION_LISTR;;;;;;;;EXPRESSION_LIST -> EXPRESSIONEXPRESSION_LISTR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
EXPRESSION_LISTR;;;;;;;;;;EXPRESSION_LISTR -> logicop EXPRESSION_LIST;;;;;;;;;;;;;;EXPRESSION_LISTR -> epsilon;;;;;EXPRESSION_LISTR -> epsilon;;;;;;;;;;;;;;;;;;;;;;;;
EXPRESSION;;EXPRESSION -> SIMPLE_EXPRESSION EXPRESSIONR;EXPRESSION -> SIMPLE_EXPRESSION EXPRESSIONR;EXPRESSION -> SIMPLE_EXPRESSION EXPRESSIONR;EXPRESSION -> SIMPLE_EXPRESSION EXPRESSIONR;EXPRESSION -> SIMPLE_EXPRESSION EXPRESSIONR;;;;;;;;EXPRESSION -> SIMPLE_EXPRESSION EXPRESSIONR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
EXPRESSIONR;;;;;;;;;EXPRESSIONR -> relopSIMPLE_EXPRESSION;EXPRESSIONR -> epsilon;;;;;;;;;;;;;EXPRESSIONR -> epsilon;EXPRESSIONR -> epsilon;;;;;EXPRESSIONR -> epsilon;;EXPRESSIONR -> epsilon;EXPRESSIONR -> epsilon;;;;;;;;;;;;;;;;;;;;;
SIMPLE_EXPRESSION;;SIMPLE_EXPRESSION-> SIGN TERM SIMPLE_EXPRESSIONR;SIMPLE_EXPRESSION-> SIGN TERM SIMPLE_EXPRESSIONR;SIMPLE_EXPRESSION-> TERM SIMPLE_EXPRESSIONR;SIMPLE_EXPRESSION-> TERM SIMPLE_EXPRESSIONR;SIMPLE_EXPRESSION-> TERM SIMPLE_EXPRESSIONR;;;;;;;;SIMPLE_EXPRESSION -> TERM SIMPLE_EXPRESSIONR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
SIMPLE_EXPRESSIONR;;;;;;;;SIMPLE_EXPRESSIONR-> addop SIMPLE_EXPRESSION;SIMPLE_EXPRESSIONR-> epsilon;SIMPLE_EXPRESSIONR-> epsilon;;SIMPLE_EXPRESSIONR-> epsilon;;;;;;;;;;;SIMPLE_EXPRESSIONR -> epsilon;SIMPLE_EXPRESSIONR-> epsilon;;;;;SIMPLE_EXPRESSIONR-> epsilon;;SIMPLE_EXPRESSIONR -> epsilon;SIMPLE_EXPRESSIONR -> epsilon;;;;;;;;;;;;;;;;;;;;;
TERM;;;;TERM -> FACTOR TERMR;TERM -> FACTOR TERMR;TERM -> FACTOR TERMR;;;;;;;;TERM -> FACTOR TERMR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
TERMR;;;;;;;TERMR-> mulop FACTOR TERMR;TERMR -> epsilon;TERMR -> epsilon;TERMR -> epsilon;;TERMR -> epsilon;;;;;;;;;;;TERMR -> epsilon;TERMR -> epsilon;;;;;TERMR -> epsilon;;TERMR -> epsilon;TERMR -> epsilon;;;;;;;;;;;;;;;;;;;;;
FACTOR;;;;FACTOR -> not FACTOR;FACTOR -> const_real;FACTOR -> const_int;;;;;;;;FACTOR -> VARIABLE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
SIGN;;SIGN -> minus;SIGN -> plus;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
